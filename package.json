{
  "name": "topic-prisma-testing",
  "version": "1.0.0",
  "description": "Examples of how to do Prisma unit and functional testing with NodeJS and Typescript.",
  "repository": "git@github.com:eddeee888/topic-prisma-testing.git",
  "author": "Eddy Nguyen <eddeee.nguyen@gmail.com>",
  "license": "MIT",
  "scripts": {
    "build": "tsc",
    "test": "jest --watchAll -i",
    "start": "ts-node src/server.ts",
    "prisma:up": "prisma migrate up --experimental --create-db --auto-approve",
    "prisma:generate": "prisma generate",
    "docker:dev:build": "docker-compose build --no-cache",
    "docker:dev:up": "docker-compose up -d",
    "docker:dev:down": "docker-compose down",
    "docker:dev:prisma:up": "docker-compose run --rm server yarn prisma:up",
    "docker:test:build": "docker-compose -f docker-compose.test.yml build --no-cache",
    "docker:test:prepare": "docker-compose -f docker-compose.test.yml run --rm server yarn ts-node src/prisma/reset.ts; docker-compose -f docker-compose.test.yml run --rm server yarn prisma:up",
    "docker:test:run": "docker-compose -f docker-compose.test.yml up -d && docker-compose -f docker-compose.test.yml run --rm server ./scripts/wait-for-it.sh database:3306 -- yarn test && yarn docker:test:prepare; docker-compose -f docker-compose.test.yml down"
  },
  "dependencies": {
    "express": "4.17.1",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@prisma/cli": "2.12.1",
    "@prisma/client": "2.12.1",
    "@types/express": "4.17.9",
    "@types/jest": "26.0.14",
    "@types/node-fetch": "2.5.7",
    "@types/uuid": "8.3.0",
    "jest": "26.4.2",
    "node-fetch": "2.6.1",
    "ts-jest": "26.4.1",
    "ts-node": "9.1.1",
    "typescript": "4.1.3"
  },
  "prisma": {
    "schema": "src/prisma/schema.prisma"
  }
}
